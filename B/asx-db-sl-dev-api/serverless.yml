service: asx-db-sl-dev-api

frameworkVersion: '3'

custom:
  tableName: 'tickers-table-${self:provider.stage}'
provider:
  name: aws
  runtime: python3.9
  stage: dev
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ TickersTable, Arn ]
  environment:
    TICKER_TABLE: ${self:custom.tableName}

functions:
  rateHandler:
    # Loads CSV files of tickers into DDB
    handler: handler.init
#    events:
      # Do it only once

  cronHandler:
    handler: handler.run
    events:
      # Invoke Lambda function every 2nd minute from Mon-Fri
      - schedule: cron(0/2 * ? * MON-FRI *)

resources:
  Resources:
    TickersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: ticker
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}
    

plugins:
  - serverless-dynamodb-local
